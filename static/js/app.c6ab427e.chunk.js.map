{"version":3,"sources":["colors.js","App.js"],"names":["theme","App","useState","working","setWorking","text","setText","toDos","setTodos","useEffect","loadToDos","saveTodos","toSave","AsyncStorage","setItem","JSON","stringify","s","getItem","parse","addTodo","newTodos","Date","now","deleteTodo","key","Platform","OS","confirm","Alert","alert","onPress","View","style","styles","container","StatusBar","header","TouchableOpacity","Text","btnText","color","TextInput","onSubmitEditing","onChangeText","payload","value","placeholder","input","ScrollView","Object","keys","map","toDo","toDoText","Feather","name","size","StyleSheet","create","flex","backgroundColor","paddingHorizontal","justifyContent","flexDirection","marginTop","fontSize","fontWeight","paddingVertical","marginVertical","borderRadius","marginBottom","alignItems"],"mappings":"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","file":"static/js/app.c6ab427e.chunk.js","sourcesContent":["export const theme = {\n    bg: \"#020303\",\n    grey:\"#3A3D40\",\n    toDoBg : '#3C3F41'\n}","import { useEffect, useState } from 'react'\nimport { StatusBar } from 'expo-status-bar';\nimport { Alert, ScrollView, StyleSheet, Text, TextInput, TouchableOpacity, View, Platform} from 'react-native';\nimport { theme } from './colors';\nimport { Feather } from '@expo/vector-icons';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nconst STORAGE_KEY = '@toDos'\n\nexport default function App() {\n  const [working, setWorking] = useState(true);\n  const [text,setText] = useState(\"\");\n  const [toDos, setTodos] = useState({});\n  useEffect(()=> {\n    loadToDos();\n  },[]);\n  const travel = () => setWorking(false);\n  const work = () => setWorking(true);\n  const onChangeText = (payload) => setText(payload);\n  const saveTodos = async (toSave) => {\n    await AsyncStorage.setItem(STORAGE_KEY,JSON.stringify(toSave));\n  }\n  const loadToDos = async () => {\n    const s = await AsyncStorage.getItem(STORAGE_KEY);\n    if(s){\n      setTodos(JSON.parse(s));\n    }\n  }\n  const addTodo = async() => {\n    if(text === \"\"){\n      return;\n    }\n    //save todo\n    //onst newTodos = Object.assign({},toDos, {[Date.now()]: {text, work:working}});\n    const newTodos = {...toDos,[Date.now()]: {text, working:working}};\n    \n    setTodos(newTodos);\n    await saveTodos(newTodos);\n    setText('');\n  }\n  const deleteTodo = async(key) => {\n    if(Platform.OS === \"web\"){\n       const ok = confirm('삭제 하시겠습니까?');\n       if(ok){\n          const newTodos = {...toDos}\n          delete newTodos[key];\n          setTodos(newTodos);\n          saveTodos(newTodos);\n       }\n    }else{\n      Alert.alert(\n        \"Delete To Do\", \"Are you sure?\",\n        [\n          {text:\"i'm sure\", onPress:() => {\n          const newTodos = {...toDos}\n          delete newTodos[key];\n          setTodos(newTodos);\n          saveTodos(newTodos);\n        }},\n          {text:\"cancel\"},\n        ])\n    }\n  }\n \n  return (\n    <View style={styles.container}>\n      <StatusBar style=\"auto\" />\n      <View style={styles.header}>\n        <TouchableOpacity onPress={work}>\n          <Text style={{...styles.btnText,color: working? \"white\": theme.grey}}>Work</Text>\n        </TouchableOpacity>\n        <TouchableOpacity onPress={travel}>\n          <Text style={{...styles.btnText,color: !working? \"white\": theme.grey}}>Travel</Text>\n        </TouchableOpacity>\n      </View>\n      <View>\n        <TextInput \n          onSubmitEditing={addTodo}\n          onChangeText={onChangeText}\n          value={text}\n          placeholder={working? \"Add a To do\": \"Where do you want to go?\"}\n          style={styles.input}/>\n      </View>\n      <ScrollView>\n        {Object.keys(toDos).map((key) => (\n         toDos[key].working === working ? \n         <View style={styles.toDo} key={key}>\n            <Text style={styles.toDoText}>{toDos[key].text}</Text>\n            <TouchableOpacity onPress={()=> deleteTodo(key)}>\n              <Feather name=\"trash-2\" size={18} color=\"white\" />\n            </TouchableOpacity>\n          </View> : null\n        ))}\n      </ScrollView>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: theme.bg,\n    paddingHorizontal: 20,\n  },\n  header:{\n    justifyContent:\"space-between\",\n    flexDirection:'row',\n    marginTop: 100,\n  },\n  btnText:{\n    fontSize:44,\n    fontWeight: \"600\",\n  },\n  input:{\n    backgroundColor: \"white\",\n    paddingVertical:15,\n    paddingHorizontal: 20,\n    marginVertical: 20,\n    borderRadius: 30,\n    fontSize: 18,\n  },\n  toDo:{\n    backgroundColor: theme.toDoBg,\n    marginBottom: 10,\n    paddingHorizontal: 40,\n    paddingVertical: 20,\n    borderRadius: 15,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\"\n  },\n  toDoText:{\n    color: \"white\",\n    fontSize: 16,\n    fontWeight: \"500\"\n  }\n});\n"],"sourceRoot":""}